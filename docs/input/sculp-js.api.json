{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.38.3",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "sculp-js!",
  "docComment": "",
  "name": "sculp-js",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "sculp-js!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!add:var",
          "docComment": "/**\n * 数值安全加法\n *\n * @param arg1 - 数值1\n *\n * @param arg2 - 数值2\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "add: "
            },
            {
              "kind": "Content",
              "text": "(arg1: number, arg2: number) => number"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "add",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!addClass:function(1)",
          "docComment": "/**\n * 给元素增加样式名\n *\n * @param el - \n *\n * @param classNames - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function addClass(el: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", classNames: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "el",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "classNames",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "addClass"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "sculp-js!AnyArray:type",
          "docComment": "/**\n * 任意数组\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type AnyArray = "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "AnyArray",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "sculp-js!AnyFunc:type",
          "docComment": "/**\n * 任意函数\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type AnyFunc<R = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(...args: any[]) => R"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "AnyFunc",
          "typeParameters": [
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "sculp-js!AnyObject:type",
          "docComment": "/**\n * 任意对象\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type AnyObject = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string | number, any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "AnyObject",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!arrayEach:function(1)",
          "docComment": "/**\n * 遍历数组，返回 false 中断遍历(支持continue和break操作)\n *\n * @param array - \n *\n * @param iterator - 迭代函数, 返回值为true时continue, 返回值为false时break\n *\n * @param reverse - 是否倒序\n *\n * @returns {*}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function arrayEach<V>(array: "
            },
            {
              "kind": "Reference",
              "text": "ArrayLike",
              "canonicalReference": "!ArrayLike:interface"
            },
            {
              "kind": "Content",
              "text": "<V>"
            },
            {
              "kind": "Content",
              "text": ", iterator: "
            },
            {
              "kind": "Content",
              "text": "(val: V, idx: number, arr: "
            },
            {
              "kind": "Reference",
              "text": "ArrayLike",
              "canonicalReference": "!ArrayLike:interface"
            },
            {
              "kind": "Content",
              "text": "<V>) => boolean | void"
            },
            {
              "kind": "Content",
              "text": ", reverse?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "array",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "iterator",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 7
              },
              "isOptional": false
            },
            {
              "parameterName": "reverse",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "arrayEach"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!arrayEachAsync:function(1)",
          "docComment": "/**\n * 异步遍历数组，返回 false 中断遍历\n *\n * @param array - 数组\n *\n * @param iterator - 支持Promise类型的回调函数\n *\n * @param reverse - 是否反向遍历\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function arrayEachAsync<V>(array: "
            },
            {
              "kind": "Reference",
              "text": "ArrayLike",
              "canonicalReference": "!ArrayLike:interface"
            },
            {
              "kind": "Content",
              "text": "<V>"
            },
            {
              "kind": "Content",
              "text": ", iterator: "
            },
            {
              "kind": "Content",
              "text": "(val: V, idx: number) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any> | any"
            },
            {
              "kind": "Content",
              "text": ", reverse?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "array",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "iterator",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 7
              },
              "isOptional": false
            },
            {
              "parameterName": "reverse",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "arrayEachAsync"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "sculp-js!ArrayElements:type",
          "docComment": "/**\n * 取出数组元素\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type ArrayElements<A> = "
            },
            {
              "kind": "Content",
              "text": "A extends "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<infer R> ? R : never"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "ArrayElements",
          "typeParameters": [
            {
              "typeParameterName": "A",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!arrayInsertBefore:function(1)",
          "docComment": "/**\n * 插入到目标位置之前\n *\n * @param array - \n *\n * @param start - \n *\n * @param to - \n *\n * @returns {*}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function arrayInsertBefore(array: "
            },
            {
              "kind": "Reference",
              "text": "AnyArray",
              "canonicalReference": "sculp-js!AnyArray:type"
            },
            {
              "kind": "Content",
              "text": ", start: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", to: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "array",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "start",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "to",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "arrayInsertBefore"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!arrayLike:function(1)",
          "docComment": "/**\n * 判断一个对象是否为类数组\n *\n * @param any - \n *\n * @returns {boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function arrayLike(any: "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "any",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "arrayLike"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!arrayRemove:function(1)",
          "docComment": "/**\n * 数组删除指定项目\n *\n * @param array - \n *\n * @param expect - \n *\n * @returns {V[]}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function arrayRemove<V>(array: "
            },
            {
              "kind": "Content",
              "text": "V[]"
            },
            {
              "kind": "Content",
              "text": ", expect: "
            },
            {
              "kind": "Content",
              "text": "(val: V, idx: number) => boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "V[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "array",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "expect",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "arrayRemove"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!asyncMap:function(1)",
          "docComment": "/**\n * 异步遍历  @ref https://github.com/Kevnz/async-tools/blob/master/src/mapper.js  @ref https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/@@iterator\n *\n * @param list - \n *\n * @param mapper - \n *\n * @param concurrency - 并发数量，默认无限\n *\n * @returns {Promise<R[]>}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function asyncMap<T, R>(list: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ", mapper: "
            },
            {
              "kind": "Content",
              "text": "(val: T, idx: number, list: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<T>) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<R>"
            },
            {
              "kind": "Content",
              "text": ", concurrency?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<R[]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "list",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "mapper",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 9
              },
              "isOptional": false
            },
            {
              "parameterName": "concurrency",
              "parameterTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "asyncMap"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!buildTree:function(1)",
          "docComment": "/**\n * 根据 idProp 与 parentIdProp 从对象数组中构建对应的树 当 A[parentIdProp] === B[idProp] 时，对象A会被移动到对象B的children。 当一个对象的 parentIdProp 不与其他对象的 idProp 字段相等时，该对象被作为树的顶层节点\n *\n * @param idProp - 元素ID\n *\n * @param parentIdProp - 父元素ID\n *\n * @param items - 一维数组\n *\n * @returns {WithChildren<T>[]} 树\n *\n * @example\n *\n * const array = [ { id: 'node-1', parent: 'root' }, { id: 'node-2', parent: 'root' }, { id: 'node-3', parent: 'node-2' }, { id: 'node-4', parent: 'node-2' }, { id: 'node-5', parent: 'node-4' }, ] const tree = buildTree('id', 'parent', array) expect(tree).toEqual([ { id: 'node-1', parent: 'root' }, { id: 'node-2', parent: 'root', children: [ { id: 'node-3', parent: 'node-2' }, { id: 'node-4', parent: 'node-2', children: [{ id: 'node-5', parent: 'node-4' }], }, ], }, ])\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function buildTree<ID extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", PID extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", T extends "
            },
            {
              "kind": "Content",
              "text": "{\n    [key in ID | PID]: string;\n}"
            },
            {
              "kind": "Content",
              "text": ">(idProp: "
            },
            {
              "kind": "Content",
              "text": "ID"
            },
            {
              "kind": "Content",
              "text": ", parentIdProp: "
            },
            {
              "kind": "Content",
              "text": "PID"
            },
            {
              "kind": "Content",
              "text": ", items: "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "WithChildren",
              "canonicalReference": "sculp-js!WithChildren:type"
            },
            {
              "kind": "Content",
              "text": "<T>[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 13,
            "endIndex": 15
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "idProp",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            },
            {
              "parameterName": "parentIdProp",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "isOptional": false
            },
            {
              "parameterName": "items",
              "parameterTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "ID",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "PID",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "buildTree"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!calculateDate:function(1)",
          "docComment": "/**\n * 计算向前或向后N天的具体日期\n *\n * @param originDate - 参考日期\n *\n * @param n - 正数：向后推算；负数：向前推算\n *\n * @param sep - 日期格式的分隔符\n *\n * @returns {string} 计算后的目标日期\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function calculateDate(originDate: "
            },
            {
              "kind": "Reference",
              "text": "DateValue",
              "canonicalReference": "sculp-js!DateValue:type"
            },
            {
              "kind": "Content",
              "text": ", n: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", sep?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "originDate",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "n",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "sep",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "calculateDate"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!calculateDateTime:function(1)",
          "docComment": "/**\n * 计算向前或向后N天的具体日期时间\n *\n * @param originDateTime - 参考日期时间\n *\n * @param n - 正数：向后推算；负数：向前推算\n *\n * @param dateSep - 日期分隔符\n *\n * @param timeSep - 时间分隔符\n *\n * @returns {string} 转换后的目标日期时间\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function calculateDateTime(originDateTime: "
            },
            {
              "kind": "Reference",
              "text": "DateValue",
              "canonicalReference": "sculp-js!DateValue:type"
            },
            {
              "kind": "Content",
              "text": ", n: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", dateSep?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", timeSep?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "originDateTime",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "n",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "dateSep",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            },
            {
              "parameterName": "timeSep",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "name": "calculateDateTime"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!chooseLocalFile:function(1)",
          "docComment": "/**\n * 选择本地文件\n *\n * @param accept - 上传的文件类型，用于过滤\n *\n * @param changeCb - 选择文件回调\n *\n * @returns {HTMLInputElement}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function chooseLocalFile(accept: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", changeCb: "
            },
            {
              "kind": "Content",
              "text": "(FileList: any) => any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "HTMLInputElement",
              "canonicalReference": "!HTMLInputElement:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "accept",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "changeCb",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "chooseLocalFile"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!cloneDeep:function(1)",
          "docComment": "/**\n * 深拷贝堪称完全体 即：任何类型的数据都会被深拷贝\n *\n * @param obj - \n *\n * @param map - \n *\n * @returns {AnyObject | AnyArray}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function cloneDeep(obj: "
            },
            {
              "kind": "Reference",
              "text": "Object",
              "canonicalReference": "!Object:interface"
            },
            {
              "kind": "Content",
              "text": ", map?: "
            },
            {
              "kind": "Reference",
              "text": "WeakMap",
              "canonicalReference": "!WeakMap:interface"
            },
            {
              "kind": "Content",
              "text": "<object, any>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "sculp-js!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AnyArray",
              "canonicalReference": "sculp-js!AnyArray:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "map",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": true
            }
          ],
          "name": "cloneDeep"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!compressImg:function(1)",
          "docComment": "/**\n * Web端：等比例压缩图片批量处理 (size小于200KB，不压缩)\n *\n * @param file - 文件\n *\n * @param options - \n *\n * @returns {Promise<object> | undefined}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function compressImg(file: "
            },
            {
              "kind": "Reference",
              "text": "File",
              "canonicalReference": "!File:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "FileList",
              "canonicalReference": "!FileList:interface"
            },
            {
              "kind": "Content",
              "text": ", options: "
            },
            {
              "kind": "Reference",
              "text": "ICompressOptions",
              "canonicalReference": "sculp-js!ICompressOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<object> | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "file",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "compressImg"
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!cookieDel:var",
          "docComment": "/**\n * 删除单个 cookie\n *\n * @param name - cookie 名称\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "cookieDel: "
            },
            {
              "kind": "Content",
              "text": "(name: string) => void"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "cookieDel",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!cookieGet:function(1)",
          "docComment": "/**\n * 获取cookie\n *\n * @param name - \n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function cookieGet(name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "cookieGet"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!cookieSet:function(1)",
          "docComment": "/**\n * 设置 cookie\n *\n * @param name - \n *\n * @param value - \n *\n * @param maxAge - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function cookieSet(name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", value: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", maxAge?: "
            },
            {
              "kind": "Content",
              "text": "number | "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "maxAge",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": true
            }
          ],
          "name": "cookieSet"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!copyText:function(1)",
          "docComment": "/**\n * 复制文本\n *\n * @param text - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function copyText(text: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "text",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "copyText"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!crossOriginDownload:function(1)",
          "docComment": "/**\n * 根据URL下载文件（解决跨域a.download不生效问题)\n *\n * @param url - \n *\n * @param filename - \n *\n * @param callback - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function crossOriginDownload(url: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", filename: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", callback?: "
            },
            {
              "kind": "Reference",
              "text": "Function",
              "canonicalReference": "!Function:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "url",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "filename",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "callback",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "crossOriginDownload"
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!DateObj:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface DateObj "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "DateObj",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "sculp-js!DateObj:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[propName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "propName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!dateParse:function(1)",
          "docComment": "/**\n * 解析为Date对象\n *\n * @param value - 可以是数值、字符串或 Date 对象\n *\n * @returns {Date} - 转换后的目标Date\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function dateParse(value: "
            },
            {
              "kind": "Reference",
              "text": "DateValue",
              "canonicalReference": "sculp-js!DateValue:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "dateParse"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!dateToEnd:function(1)",
          "docComment": "/**\n * 将日期转换为一天的结束时间，即23点59分59秒999毫秒\n *\n * @param value - \n *\n * @returns {Date}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function dateToEnd(value: "
            },
            {
              "kind": "Reference",
              "text": "DateValue",
              "canonicalReference": "sculp-js!DateValue:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "dateToEnd"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!dateToStart:function(1)",
          "docComment": "/**\n * 将日期转换为一天的开始时间，即0点0分0秒0毫秒\n *\n * @param value - \n *\n * @returns {Date}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function dateToStart(value: "
            },
            {
              "kind": "Reference",
              "text": "DateValue",
              "canonicalReference": "sculp-js!DateValue:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "dateToStart"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "sculp-js!DateValue:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type DateValue = "
            },
            {
              "kind": "Content",
              "text": "number | string | "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "DateValue",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!debounce:var",
          "docComment": "/**\n * 防抖函数 当函数被连续调用时，该函数并不执行，只有当其全部停止调用超过一定时间后才执行1次。 例如：上电梯的时候，大家陆陆续续进来，电梯的门不会关上，只有当一段时间都没有人上来，电梯才会关门。\n *\n * @param func - \n *\n * @param wait - \n *\n * @returns {DebounceFunc<F>}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "debounce: "
            },
            {
              "kind": "Content",
              "text": "<F extends "
            },
            {
              "kind": "Reference",
              "text": "AnyFunc",
              "canonicalReference": "sculp-js!AnyFunc:type"
            },
            {
              "kind": "Content",
              "text": ">(func: F, wait?: number) => "
            },
            {
              "kind": "Reference",
              "text": "DebounceFunc",
              "canonicalReference": "sculp-js!DebounceFunc:interface"
            },
            {
              "kind": "Content",
              "text": "<F>"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "debounce",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!DebounceFunc:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface DebounceFunc<F extends "
            },
            {
              "kind": "Reference",
              "text": "AnyFunc",
              "canonicalReference": "sculp-js!AnyFunc:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "DebounceFunc",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "sculp-js!DebounceFunc:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(...args: "
                },
                {
                  "kind": "Reference",
                  "text": "Parameters",
                  "canonicalReference": "!Parameters:type"
                },
                {
                  "kind": "Content",
                  "text": "<F>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!DebounceFunc#cancel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cancel: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cancel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!decodeFromBase64:function(1)",
          "docComment": "/**\n * 将base64编码的字符串转换为原始字符串，包括对中文内容的处理(高性能，且支持Web、Node、小程序等任意平台)\n *\n * @param base64 - base64编码的字符串\n *\n * @returns 原始字符串，包括中文内容\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function decodeFromBase64(base64: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "base64",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "decodeFromBase64"
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!divide:var",
          "docComment": "/**\n * 数值安全除法\n *\n * @param arg1 - 数值1\n *\n * @param arg2 - 数值2\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "divide: "
            },
            {
              "kind": "Content",
              "text": "(arg1: number, arg2: number) => number"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "divide",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!downloadBlob:function(1)",
          "docComment": "/**\n * 将大文件对象通过 A 链接的方式下载\n *\n * @param blob - \n *\n * @param filename - \n *\n * @param callback - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function downloadBlob(blob: "
            },
            {
              "kind": "Reference",
              "text": "Blob",
              "canonicalReference": "!Blob:interface"
            },
            {
              "kind": "Content",
              "text": ", filename: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", callback?: "
            },
            {
              "kind": "Reference",
              "text": "Function",
              "canonicalReference": "!Function:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "blob",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "filename",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "callback",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "downloadBlob"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!downloadData:function(1)",
          "docComment": "/**\n * 将指定数据格式通过 A 链接的方式下载\n *\n * @param data - \n *\n * @param fileType - 支持 json/csv/xls/xlsx 四种格式\n *\n * @param filename - \n *\n * @param headers - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function downloadData(data: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "sculp-js!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "sculp-js!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", fileType: "
            },
            {
              "kind": "Reference",
              "text": "FileType",
              "canonicalReference": "sculp-js!FileType:type"
            },
            {
              "kind": "Content",
              "text": ", filename: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", headers?: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "data",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "fileType",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": false
            },
            {
              "parameterName": "filename",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": false
            },
            {
              "parameterName": "headers",
              "parameterTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "isOptional": true
            }
          ],
          "name": "downloadData"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!downloadHref:function(1)",
          "docComment": "/**\n * 通过 A 链接的方式下载\n *\n * @param href - \n *\n * @param filename - \n *\n * @param callback - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function downloadHref(href: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", filename: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", callback?: "
            },
            {
              "kind": "Reference",
              "text": "Function",
              "canonicalReference": "!Function:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "href",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "filename",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "callback",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "downloadHref"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!downloadURL:function(1)",
          "docComment": "/**\n * 通过打开新窗口的方式下载\n *\n * @param url - \n *\n * @param params - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function downloadURL(url: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", params?: "
            },
            {
              "kind": "Reference",
              "text": "LooseParams",
              "canonicalReference": "sculp-js!LooseParams:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "url",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "downloadURL"
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!EMAIL_REGEX:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "EMAIL_REGEX: "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "EMAIL_REGEX",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!encodeToBase64:function(1)",
          "docComment": "/**\n * 将原始字符串，包括中文内容，转换为base64编码的字符串(高性能，且支持Web、Node、小程序等任意平台)\n *\n * @param rawStr - 原始字符串，包括中文内容\n *\n * @returns base64编码的字符串\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function encodeToBase64(rawStr: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rawStr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "encodeToBase64"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!escapeRegExp:function(1)",
          "docComment": "/**\n * 转义所有特殊字符\n *\n * @param str - 原字符串 reference: https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_expressions\n *\n * @returns string\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function escapeRegExp(str: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "str",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "escapeRegExp"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!executeInScope:function(1)",
          "docComment": "/**\n * 在指定作用域中执行代码\n *\n * @param code - 要执行的代码（需包含 return 语句或表达式）\n *\n * @param scope - 作用域对象（键值对形式的变量环境）\n *\n * @returns 代码执行结果\n *\n * @example\n *\n * // 测试用例 1: 基本变量访问 executeInScope(\"return a + b;\", { a: 1, b: 2 }); // 3\n *\n * // 测试用例 2: 支持复杂表达式和运算 executeInScope( \"return Array.from({ length: 3 }, (_, i) => base + i);\", { base: 100 } ); // [100, 101, 102]\n *\n * // 支持外传函数作用域执行 const scope = { $: { fun: { time: { now: function () { return new Date(); }, }, }, }, }; executeInScope(\"return $.fun.time.now()\", scope)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function executeInScope(code: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", scope?: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "code",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "scope",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": true
            }
          ],
          "name": "executeInScope"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "sculp-js!FileType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type FileType = "
            },
            {
              "kind": "Content",
              "text": "'json' | 'csv' | 'xls' | 'xlsx'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "FileType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!flatTree:function(1)",
          "docComment": "/**\n * 树形结构转扁平化\n *\n * @param treeList - \n *\n * @param options - \n *\n * @returns {*}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function flatTree(treeList: "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "IFieldOptions",
              "canonicalReference": "sculp-js!IFieldOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "treeList",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "flatTree"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!forEachDeep:function(1)",
          "docComment": "/**\n * 深度优先遍历函数(支持continue和break操作), 可用于insert tree item 和 remove tree item\n *\n * @param tree - 树形数据\n *\n * @param iterator - 迭代函数, 返回值为true时continue, 返回值为false时break\n *\n * @param children - 定制子元素的key\n *\n * @param isReverse - 是否反向遍历\n *\n * @returns {*}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function forEachDeep<V>(tree: "
            },
            {
              "kind": "Reference",
              "text": "ArrayLike",
              "canonicalReference": "!ArrayLike:interface"
            },
            {
              "kind": "Content",
              "text": "<V>"
            },
            {
              "kind": "Content",
              "text": ", iterator: "
            },
            {
              "kind": "Content",
              "text": "(val: V, i: number, currentArr: "
            },
            {
              "kind": "Reference",
              "text": "ArrayLike",
              "canonicalReference": "!ArrayLike:interface"
            },
            {
              "kind": "Content",
              "text": "<V>, tree: "
            },
            {
              "kind": "Reference",
              "text": "ArrayLike",
              "canonicalReference": "!ArrayLike:interface"
            },
            {
              "kind": "Content",
              "text": "<V>, parent: V | null, level: number) => boolean | void"
            },
            {
              "kind": "Content",
              "text": ", children?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", isReverse?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 14,
            "endIndex": 15
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "tree",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "iterator",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 9
              },
              "isOptional": false
            },
            {
              "parameterName": "children",
              "parameterTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "isOptional": true
            },
            {
              "parameterName": "isReverse",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "forEachDeep"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!forEachMap:function(1)",
          "docComment": "/**\n * 深度优先遍历的Map函数(支持continue和break操作), 可用于insert tree item 和 remove tree item\n *\n * @param tree - 树形数据\n *\n * @param iterator - 迭代函数, 返回值为true时continue, 返回值为false时break\n *\n * @param children - 定制子元素的key\n *\n * @param isReverse - 是否反向遍历\n *\n * @returns {any[]} 新的一棵树\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function forEachMap<V>(tree: "
            },
            {
              "kind": "Reference",
              "text": "ArrayLike",
              "canonicalReference": "!ArrayLike:interface"
            },
            {
              "kind": "Content",
              "text": "<V>"
            },
            {
              "kind": "Content",
              "text": ", iterator: "
            },
            {
              "kind": "Content",
              "text": "(val: V, i: number, currentArr: "
            },
            {
              "kind": "Reference",
              "text": "ArrayLike",
              "canonicalReference": "!ArrayLike:interface"
            },
            {
              "kind": "Content",
              "text": "<V>, tree: "
            },
            {
              "kind": "Reference",
              "text": "ArrayLike",
              "canonicalReference": "!ArrayLike:interface"
            },
            {
              "kind": "Content",
              "text": "<V>, parent: V | null, level: number) => boolean | any"
            },
            {
              "kind": "Content",
              "text": ", children?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", isReverse?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 14,
            "endIndex": 15
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "tree",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "iterator",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 9
              },
              "isOptional": false
            },
            {
              "parameterName": "children",
              "parameterTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "isOptional": true
            },
            {
              "parameterName": "isReverse",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "forEachMap"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!formatDate:function(1)",
          "docComment": "/**\n * 格式化为日期对象(带自定义格式化模板)\n *\n * @param value - 可以是数值、字符串或 Date 对象\n *\n * @param format - 模板，默认是 YYYY-MM-DD HH:mm:ss，模板字符： - YYYY：年 - yyyy: 年 - MM：月 - DD：日 - dd: 日 - HH：时（24 小时制） - mm：分 - ss：秒 - SSS：毫秒 - ww: 周\n *\n * @returns {string} 格式化后的日期字符串\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function formatDate(value: "
            },
            {
              "kind": "Reference",
              "text": "DateValue",
              "canonicalReference": "sculp-js!DateValue:type"
            },
            {
              "kind": "Content",
              "text": ", format?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "format",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "formatDate"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!formatNumber:function(1)",
          "docComment": "/**\n * 将数字格式化成千位分隔符显示的字符串\n *\n * @param val - 数字\n *\n * @param type - 展示分段显示的类型 int:整型 | float:浮点型\n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function formatNumber(val: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", type?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "val",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "type",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "formatNumber"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!formatTree:function(1)",
          "docComment": "/**\n * 扁平化数组转换成树(效率高于buildTree)\n *\n * @param list - \n *\n * @param options - \n *\n * @returns {any[]}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function formatTree(list: "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "IFieldOptions",
              "canonicalReference": "sculp-js!IFieldOptions:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "list",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "formatTree"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!fuzzySearchTree:function(1)",
          "docComment": "/**\n * 模糊搜索函数，返回包含搜索字符的节点及其祖先节点, 适用于树型组件的字符过滤功能\n *\n * @param nodes - \n *\n * @param query - \n *\n * @param options - \n *\n * @returns {any[]}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function fuzzySearchTree(nodes: "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": ", query: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "ISearchTreeOpts",
              "canonicalReference": "sculp-js!ISearchTreeOpts:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "nodes",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "query",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "fuzzySearchTree"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!genCanvasWM:function(1)",
          "docComment": "/**\n * canvas 实现 水印, 具备防删除功能\n *\n * @param canvasWM - \n *\n * @example\n *\n * genCanvasWM({ content: 'QQMusicFE' })\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function genCanvasWM(canvasWM: "
            },
            {
              "kind": "Reference",
              "text": "ICanvasWM",
              "canonicalReference": "sculp-js!ICanvasWM:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "canvasWM",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "genCanvasWM"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!getComputedCssVal:function(1)",
          "docComment": "/**\n * 获取元素样式属性的计算值\n *\n * @param el - \n *\n * @param property - \n *\n * @param reNumber - \n *\n * @returns {string|number}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function getComputedCssVal(el: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", property: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", reNumber?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "el",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "property",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "reNumber",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "getComputedCssVal"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!getGlobal:function(1)",
          "docComment": "/**\n * 获取全局变量\n *\n * @param key - \n *\n * @param val - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function getGlobal<T>(key: "
            },
            {
              "kind": "Content",
              "text": "string | number | symbol"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T | void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "key",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "getGlobal"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!getStrWidthPx:function(1)",
          "docComment": "/**\n * 字符串的像素宽度\n *\n * @param str - 目标字符串\n *\n * @param fontSize - 字符串字体大小\n *\n * @param isRemoveDom - 计算后是否移除中间dom元素\n *\n * @returns {*}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function getStrWidthPx(str: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", fontSize?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", isRemoveDom?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "str",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "fontSize",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "isRemoveDom",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "getStrWidthPx"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!getStyle:function(1)",
          "docComment": "/**\n * 获取元素样式\n *\n * @param el - 元素\n *\n * @param key - \n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function getStyle(el: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", key: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "el",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "key",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "getStyle"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!hasClass:function(1)",
          "docComment": "/**\n * 判断元素是否包含某个样式名\n *\n * @param el - \n *\n * @param className - \n *\n * @returns {boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function hasClass(el: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", className: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "el",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "className",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "hasClass"
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!HEX_POOL:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "HEX_POOL: "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "HEX_POOL",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!HTTP_URL_REGEX:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "HTTP_URL_REGEX: "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "HTTP_URL_REGEX",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!ICanvasWM:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface ICanvasWM "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "ICanvasWM",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ICanvasWM#container:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "container: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "container",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ICanvasWM#content:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "content: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "content",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ICanvasWM#fillStyle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fillStyle: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "fillStyle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ICanvasWM#font:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "font: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "font",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ICanvasWM#height:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "height: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "height",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ICanvasWM#rotate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotate: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rotate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ICanvasWM#textAlign:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "textAlign: "
                },
                {
                  "kind": "Reference",
                  "text": "CanvasTextAlign",
                  "canonicalReference": "!CanvasTextAlign:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "textAlign",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ICanvasWM#textBaseline:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "textBaseline: "
                },
                {
                  "kind": "Reference",
                  "text": "CanvasTextBaseline",
                  "canonicalReference": "!CanvasTextBaseline:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "textBaseline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ICanvasWM#width:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "width: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "width",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ICanvasWM#zIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "zIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!ICompressOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface ICompressOptions "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "ICompressOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ICompressOptions#mime:member",
              "docComment": "/**\n * 图片类型\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mime?: "
                },
                {
                  "kind": "Reference",
                  "text": "ImageType",
                  "canonicalReference": "sculp-js!~ImageType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "mime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ICompressOptions#quality:member",
              "docComment": "/**\n * 压缩质量 0 ~ 1 之间\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "quality?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "quality",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "sculp-js!IdLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type IdLike = "
            },
            {
              "kind": "Content",
              "text": "number | string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "IdLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!IFieldOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface IFieldOptions "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "IFieldOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!IFieldOptions#childField:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "childField: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "childField",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!IFieldOptions#keyField:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyField: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "keyField",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!IFieldOptions#pidField:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pidField: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pidField",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!IPV4_REGEX:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "IPV4_REGEX: "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "IPV4_REGEX",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!IPV6_REGEX:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "IPV6_REGEX: "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "IPV6_REGEX",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isArray:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isArray: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => "
            },
            {
              "kind": "Reference",
              "text": "any",
              "canonicalReference": "sculp-js!~any"
            },
            {
              "kind": "Content",
              "text": " is unknown[]"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isArray",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isBigInt:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isBigInt: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => "
            },
            {
              "kind": "Reference",
              "text": "any",
              "canonicalReference": "sculp-js!~any"
            },
            {
              "kind": "Content",
              "text": " is bigint"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isBigInt",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isBoolean:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isBoolean: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => "
            },
            {
              "kind": "Reference",
              "text": "any",
              "canonicalReference": "sculp-js!~any"
            },
            {
              "kind": "Content",
              "text": " is boolean"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isBoolean",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isDate:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isDate: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => "
            },
            {
              "kind": "Reference",
              "text": "any",
              "canonicalReference": "sculp-js!~any"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isDate",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isDigit:var",
          "docComment": "/**\n * 判断字符串是否为数字，例如六位数字短信验证码（093031）\n *\n * @param value - \n *\n * @returns {boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isDigit: "
            },
            {
              "kind": "Content",
              "text": "(value: string) => boolean"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isDigit",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!isDomReady:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function isDomReady(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "isDomReady"
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!ISearchTreeOpts:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface ISearchTreeOpts "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "ISearchTreeOpts",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ISearchTreeOpts#childField:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "childField: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "childField",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ISearchTreeOpts#ignoreEmptyChild:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ignoreEmptyChild: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ignoreEmptyChild",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ISearchTreeOpts#nameField:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nameField: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nameField",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isEmail:var",
          "docComment": "/**\n * 判断字符串是否为邮箱格式，不对邮箱真实性做验证，如域名是否正确等\n *\n * @param value - \n *\n * @returns {boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isEmail: "
            },
            {
              "kind": "Content",
              "text": "(value: string) => boolean"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isEmail",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!isEmpty:function(1)",
          "docComment": "/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or jQuery-like collections are considered empty if they have a `length` of `0`. Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @param value - The value to check.\n *\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n *\n * @example\n *\n * isEmpty(null); // => true\n *\n * isEmpty(true); // => true\n *\n * isEmpty(1); // => true\n *\n * isEmpty([1, 2, 3]); // => false\n *\n * isEmpty({ 'a': 1 }); // => false\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function isEmpty(value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isEmpty"
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isError:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isError: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => "
            },
            {
              "kind": "Reference",
              "text": "any",
              "canonicalReference": "sculp-js!~any"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isError",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isFloat:var",
          "docComment": "/**\n * 判断字符串是否为浮点数，即必须有小数点的有理数\n *\n * @param value - \n *\n * @returns {boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isFloat: "
            },
            {
              "kind": "Content",
              "text": "(value: string) => boolean"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isFloat",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isFunction:var",
          "docComment": "/**\n * 判断是否为函数\n *\n * @param any - \n *\n * @returns {boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isFunction: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => "
            },
            {
              "kind": "Reference",
              "text": "any",
              "canonicalReference": "sculp-js!~any"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "Function",
              "canonicalReference": "!Function:interface"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isFunction",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isIdNo:var",
          "docComment": "/**\n * 判断字符串是否为身份证号码格式\n *\n * @param value - \n *\n * @returns {boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isIdNo: "
            },
            {
              "kind": "Content",
              "text": "(value: string) => boolean"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isIdNo",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isInteger:var",
          "docComment": "/**\n * 判断字符串是否为整数（自然数），即 ...,-3,-2,-1,0,1,2,3,...\n *\n * @param value - \n *\n * @returns {boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isInteger: "
            },
            {
              "kind": "Content",
              "text": "(value: string) => boolean"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isInteger",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isIpV4:var",
          "docComment": "/**\n * 判断字符串是否为 IPV4 格式，不对 ip 真实性做验证\n *\n * @param value - \n *\n * @returns {boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isIpV4: "
            },
            {
              "kind": "Content",
              "text": "(value: string) => boolean"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isIpV4",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isIpV6:var",
          "docComment": "/**\n * 判断字符串是否为 IPV6 格式，不对 ip 真实性做验证\n *\n * @param value - \n *\n * @returns {boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isIpV6: "
            },
            {
              "kind": "Content",
              "text": "(value: string) => boolean"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isIpV6",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!isJsonString:function(1)",
          "docComment": "/**\n * 判断一个字符串是否为有效的 JSON, 若有效则返回有效的JSON对象，否则false\n *\n * @param str - \n *\n * @returns {Object | boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function isJsonString(str: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Object",
              "canonicalReference": "!Object:interface"
            },
            {
              "kind": "Content",
              "text": " | boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "str",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isJsonString"
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isNaN_2:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isNaN: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => "
            },
            {
              "kind": "Reference",
              "text": "any",
              "canonicalReference": "sculp-js!~any"
            },
            {
              "kind": "Content",
              "text": " is number"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isNaN_2",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isNull:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isNull: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => "
            },
            {
              "kind": "Reference",
              "text": "any",
              "canonicalReference": "sculp-js!~any"
            },
            {
              "kind": "Content",
              "text": " is null"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isNull",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!isNullOrUnDef:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function isNullOrUnDef(val: "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "val",
              "canonicalReference": "sculp-js!~val"
            },
            {
              "kind": "Content",
              "text": " is null | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "val",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isNullOrUnDef"
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isNumber:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isNumber: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => "
            },
            {
              "kind": "Reference",
              "text": "any",
              "canonicalReference": "sculp-js!~any"
            },
            {
              "kind": "Content",
              "text": " is number"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isNumber",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isNumerical:var",
          "docComment": "/**\n * 判断字符串是否为正确数值，包括整数和浮点数\n *\n * @param value - \n *\n * @returns {boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isNumerical: "
            },
            {
              "kind": "Content",
              "text": "(value: string) => boolean"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isNumerical",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isObject:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isObject: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => "
            },
            {
              "kind": "Reference",
              "text": "any",
              "canonicalReference": "sculp-js!~any"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, unknown>"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isObject",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isPhone:var",
          "docComment": "/**\n * 判断字符串是否为宽松手机格式，即首位为 1 的 11 位数字都属于手机号\n *\n * @param value - \n *\n * @returns {boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isPhone: "
            },
            {
              "kind": "Content",
              "text": "(value: string) => boolean"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isPhone",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isPlainObject:var",
          "docComment": "/**\n * 判断对象是否为纯对象\n *\n * @param obj - \n *\n * @returns {boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isPlainObject: "
            },
            {
              "kind": "Content",
              "text": "(obj: unknown) => boolean"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isPlainObject",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isPrimitive:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isPrimitive: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => boolean"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isPrimitive",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isRegExp:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isRegExp: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => "
            },
            {
              "kind": "Reference",
              "text": "any",
              "canonicalReference": "sculp-js!~any"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isRegExp",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isString:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isString: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => "
            },
            {
              "kind": "Reference",
              "text": "any",
              "canonicalReference": "sculp-js!~any"
            },
            {
              "kind": "Content",
              "text": " is string"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isString",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isSymbol:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isSymbol: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => "
            },
            {
              "kind": "Reference",
              "text": "any",
              "canonicalReference": "sculp-js!~any"
            },
            {
              "kind": "Content",
              "text": " is symbol"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isSymbol",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isUndefined:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isUndefined: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => "
            },
            {
              "kind": "Reference",
              "text": "any",
              "canonicalReference": "sculp-js!~any"
            },
            {
              "kind": "Content",
              "text": " is undefined"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isUndefined",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isUrl:var",
          "docComment": "/**\n * 判断字符串是否为 url 格式，支持 http、https、ftp 协议，支持域名或者 ipV4\n *\n * @param value - \n *\n * @returns {boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isUrl: "
            },
            {
              "kind": "Content",
              "text": "(url: string, includeFtp?: boolean) => boolean"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isUrl",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!isValidDate:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isValidDate: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => "
            },
            {
              "kind": "Reference",
              "text": "any",
              "canonicalReference": "sculp-js!~any"
            },
            {
              "kind": "Content",
              "text": " is "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isValidDate",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!ITreeConf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface ITreeConf "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "ITreeConf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ITreeConf#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ITreeConf#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string | number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!LooseParams:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface LooseParams<T = "
            },
            {
              "kind": "Reference",
              "text": "LooseParamValue",
              "canonicalReference": "sculp-js!LooseParamValue:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "LooseParams",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "sculp-js!LooseParams:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "T | "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "sculp-js!LooseParamValue:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type LooseParamValue = "
            },
            {
              "kind": "Content",
              "text": "string | number | boolean | "
            },
            {
              "kind": "Reference",
              "text": "Date",
              "canonicalReference": "!Date:interface"
            },
            {
              "kind": "Content",
              "text": " | null | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "LooseParamValue",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!multiply:var",
          "docComment": "/**\n * 数值安全乘法\n *\n * @param arg1 - 数值1\n *\n * @param arg2 - 数值2\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "multiply: "
            },
            {
              "kind": "Content",
              "text": "(arg1: number, arg2: number) => number"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "multiply",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!numberAbbr:var",
          "docComment": "/**\n * 缩写\n *\n * @param num - \n *\n * @param units - \n *\n * @param ratio - \n *\n * @param exponent - \n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "numberAbbr: "
            },
            {
              "kind": "Content",
              "text": "(num: number | string, units: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<string>, ratio?: number, exponent?: number) => string"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "numberAbbr",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!numberToHex:function(1)",
          "docComment": "/**\n * 将十进制转换成任意进制\n *\n * @param decimal - 十进制数值或字符串，可以是任意长度，会使用大数进行计算\n *\n * @param hexPool - 进制池，默认 62 进制\n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function numberToHex(decimal: "
            },
            {
              "kind": "Content",
              "text": "number | string"
            },
            {
              "kind": "Content",
              "text": ", hexPool?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "decimal",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "hexPool",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "numberToHex"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!objectAssign:function(1)",
          "docComment": "/**\n * 对象合并，返回原始对象\n *\n * @param source - \n *\n * @param targets - \n *\n * @returns {R}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function objectAssign<R = "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "sculp-js!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AnyArray",
              "canonicalReference": "sculp-js!AnyArray:type"
            },
            {
              "kind": "Content",
              "text": ">(source: "
            },
            {
              "kind": "Reference",
              "text": "ObjectAssignItem",
              "canonicalReference": "sculp-js!ObjectAssignItem:type"
            },
            {
              "kind": "Content",
              "text": ", ...targets: "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "ObjectAssignItem",
              "canonicalReference": "sculp-js!ObjectAssignItem:type"
            },
            {
              "kind": "Content",
              "text": " | undefined)[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "R"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "source",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "targets",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 10
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "name": "objectAssign"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "sculp-js!ObjectAssignItem:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type ObjectAssignItem = "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "sculp-js!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AnyArray",
              "canonicalReference": "sculp-js!AnyArray:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "ObjectAssignItem",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!objectEach:function(1)",
          "docComment": "/**\n * 遍历对象，返回 false 中断遍历\n *\n * @param obj - \n *\n * @param iterator - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function objectEach<O extends "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "sculp-js!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": ">(obj: "
            },
            {
              "kind": "Content",
              "text": "O"
            },
            {
              "kind": "Content",
              "text": ", iterator: "
            },
            {
              "kind": "Content",
              "text": "(val: O[keyof O], key: "
            },
            {
              "kind": "Reference",
              "text": "Extract",
              "canonicalReference": "!Extract:type"
            },
            {
              "kind": "Content",
              "text": "<keyof O, string>) => any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "iterator",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "O",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "objectEach"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!objectEachAsync:function(1)",
          "docComment": "/**\n * 异步遍历对象，返回 false 中断遍历\n *\n * @param obj - \n *\n * @param iterator - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function objectEachAsync<O extends "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "sculp-js!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": ">(obj: "
            },
            {
              "kind": "Content",
              "text": "O"
            },
            {
              "kind": "Content",
              "text": ", iterator: "
            },
            {
              "kind": "Content",
              "text": "(val: O[keyof O], key: "
            },
            {
              "kind": "Reference",
              "text": "Extract",
              "canonicalReference": "!Extract:type"
            },
            {
              "kind": "Content",
              "text": "<keyof O, string>) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any> | any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "iterator",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 10
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "O",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "objectEachAsync"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!objectFill:function(1)",
          "docComment": "/**\n * 对象填充\n *\n * @param source - \n *\n * @param target - \n *\n * @param fillable - \n *\n * @returns {R}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function objectFill<R extends "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "sculp-js!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "sculp-js!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": ">(source: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<R>"
            },
            {
              "kind": "Content",
              "text": ", target: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<R>"
            },
            {
              "kind": "Content",
              "text": ", fillable?: "
            },
            {
              "kind": "Content",
              "text": "(s: typeof "
            },
            {
              "kind": "Reference",
              "text": "source",
              "canonicalReference": "sculp-js!~source:var"
            },
            {
              "kind": "Content",
              "text": ", t: typeof "
            },
            {
              "kind": "Reference",
              "text": "target",
              "canonicalReference": "sculp-js!~target:var"
            },
            {
              "kind": "Content",
              "text": ", key: keyof R) => boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "R"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 17,
            "endIndex": 18
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "source",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": false
            },
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "isOptional": false
            },
            {
              "parameterName": "fillable",
              "parameterTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 16
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "objectFill"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!objectGet:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function objectGet(obj: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "sculp-js!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": ", path: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", strict?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    p: any | undefined;\n    k: string | undefined;\n    v: any | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "strict",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "objectGet"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!objectHas:function(1)",
          "docComment": "/**\n * 判断对象内是否有该静态属性\n *\n * @param obj - \n *\n * @param key - \n *\n * @returns {boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function objectHas<T extends "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "sculp-js!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": ">(obj: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ", key: "
            },
            {
              "kind": "Content",
              "text": "keyof T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "key",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "objectHas"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!objectMap:function(1)",
          "docComment": "/**\n * 对象映射\n *\n * @param obj - \n *\n * @param iterator - \n *\n * @returns {Record<Extract<keyof O, string>, T>}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function objectMap<O extends "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "sculp-js!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": ", T>(obj: "
            },
            {
              "kind": "Content",
              "text": "O"
            },
            {
              "kind": "Content",
              "text": ", iterator: "
            },
            {
              "kind": "Content",
              "text": "(val: O[keyof O], key: "
            },
            {
              "kind": "Reference",
              "text": "Extract",
              "canonicalReference": "!Extract:type"
            },
            {
              "kind": "Content",
              "text": "<keyof O, string>) => any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Extract",
              "canonicalReference": "!Extract:type"
            },
            {
              "kind": "Content",
              "text": "<keyof O, string>, T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "iterator",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "O",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "objectMap"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!objectOmit:function(1)",
          "docComment": "/**\n * 对象祛除\n *\n * @param obj - \n *\n * @param keys - \n *\n * @returns {Pick<O, ArrayElements<K>>}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function objectOmit<O extends "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "sculp-js!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": ", K extends "
            },
            {
              "kind": "Reference",
              "text": "Extract",
              "canonicalReference": "!Extract:type"
            },
            {
              "kind": "Content",
              "text": "<keyof O, string>[]"
            },
            {
              "kind": "Content",
              "text": ">(obj: "
            },
            {
              "kind": "Content",
              "text": "O"
            },
            {
              "kind": "Content",
              "text": ", keys: "
            },
            {
              "kind": "Content",
              "text": "K"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<O, "
            },
            {
              "kind": "Reference",
              "text": "ArrayElements",
              "canonicalReference": "sculp-js!ArrayElements:type"
            },
            {
              "kind": "Content",
              "text": "<K>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": false
            },
            {
              "parameterName": "keys",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "O",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "objectOmit"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!objectPick:function(1)",
          "docComment": "/**\n * 对象提取\n *\n * @param obj - \n *\n * @param keys - \n *\n * @returns {Pick<O, ArrayElements<K>>}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function objectPick<O extends "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "sculp-js!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": ", K extends "
            },
            {
              "kind": "Reference",
              "text": "Extract",
              "canonicalReference": "!Extract:type"
            },
            {
              "kind": "Content",
              "text": "<keyof O, string>[]"
            },
            {
              "kind": "Content",
              "text": ">(obj: "
            },
            {
              "kind": "Content",
              "text": "O"
            },
            {
              "kind": "Content",
              "text": ", keys: "
            },
            {
              "kind": "Content",
              "text": "K"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<O, "
            },
            {
              "kind": "Reference",
              "text": "ArrayElements",
              "canonicalReference": "sculp-js!ArrayElements:type"
            },
            {
              "kind": "Content",
              "text": "<K>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": false
            },
            {
              "parameterName": "keys",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "O",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "objectPick"
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!once:var",
          "docComment": "/**\n * 单次函数\n *\n * @param func - \n *\n * @returns {AnyFunc}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "once: "
            },
            {
              "kind": "Content",
              "text": "<F extends "
            },
            {
              "kind": "Reference",
              "text": "AnyFunc",
              "canonicalReference": "sculp-js!AnyFunc:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "AnyFunc",
              "canonicalReference": "sculp-js!AnyFunc:type"
            },
            {
              "kind": "Content",
              "text": ">(func: F) => "
            },
            {
              "kind": "Reference",
              "text": "OnceFunc",
              "canonicalReference": "sculp-js!OnceFunc:interface"
            },
            {
              "kind": "Content",
              "text": "<F>"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "once",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!OnceFunc:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface OnceFunc<F extends "
            },
            {
              "kind": "Reference",
              "text": "AnyFunc",
              "canonicalReference": "sculp-js!AnyFunc:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "OnceFunc",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "sculp-js!OnceFunc:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(...args: "
                },
                {
                  "kind": "Reference",
                  "text": "Parameters",
                  "canonicalReference": "!Parameters:type"
                },
                {
                  "kind": "Content",
                  "text": "<F>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ReturnType",
                  "canonicalReference": "!ReturnType:type"
                },
                {
                  "kind": "Content",
                  "text": "<F>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!onDomReady:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function onDomReady(callback: "
            },
            {
              "kind": "Reference",
              "text": "ReadyCallback",
              "canonicalReference": "sculp-js!ReadyCallback:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "callback",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "onDomReady"
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!Params:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface Params<T = "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "Params",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "sculp-js!Params:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "T | "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!parseQueryParams:function(1)",
          "docComment": "/**\n * 解析URL查询参数\n *\n * @param searchStr - \n *\n * @returns {Record<string, string | string[]>}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function parseQueryParams(searchStr?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string | string[]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "searchStr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "parseQueryParams"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!parseVarFromString:function(1)",
          "docComment": "/**\n * 解析字符串的插值变量\n *\n * @param str - 字符串\n *\n * @param leftMatchSymbol - 变量左侧匹配符号，默认：{\n *\n * @param rightMatchSymbol - 变量右侧匹配符号，默认：}\n *\n * @returns string[]\n *\n * @example\n *\n * default match symbol {} same as /{\\s*([^{}\\s]*)\\s*}/g\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function parseVarFromString(str: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", leftMatchSymbol?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", rightMatchSymbol?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "str",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "leftMatchSymbol",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "rightMatchSymbol",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "parseVarFromString"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "sculp-js!PartialDeep:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type PartialDeep<T> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [P in keyof T]?: "
            },
            {
              "kind": "Reference",
              "text": "PartialDeep",
              "canonicalReference": "sculp-js!PartialDeep:type"
            },
            {
              "kind": "Content",
              "text": "<T[P]>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "PartialDeep",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!pathJoin:var",
          "docComment": "/**\n * 路径合并\n *\n * @param from - \n *\n * @param to - \n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "pathJoin: "
            },
            {
              "kind": "Content",
              "text": "(from: string, ...to: string[]) => string"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "pathJoin",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!pathNormalize:var",
          "docComment": "/**\n * 标准化路径\n *\n * @param path - \n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "pathNormalize: "
            },
            {
              "kind": "Content",
              "text": "(path: string) => string"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "pathNormalize",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!PHONE_REGEX:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "PHONE_REGEX: "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "PHONE_REGEX",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!qsParse:function(1)",
          "docComment": "/**\n * 解析查询参数，内部使用的是浏览器内置的 URLSearchParams 进行处理\n *\n * @param queryString - \n *\n * @returns {Params}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function qsParse(queryString: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Params",
              "canonicalReference": "sculp-js!Params:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "queryString",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "qsParse"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!qsStringify:function(1)",
          "docComment": "/**\n * 字符化查询对象，内部使用的是浏览器内置的 URLSearchParams 进行处理\n *\n * @param query - \n *\n * @param replacer - \n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function qsStringify(query: "
            },
            {
              "kind": "Reference",
              "text": "LooseParams",
              "canonicalReference": "sculp-js!LooseParams:interface"
            },
            {
              "kind": "Content",
              "text": ", replacer?: "
            },
            {
              "kind": "Reference",
              "text": "Replacer",
              "canonicalReference": "sculp-js!Replacer:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "query",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "replacer",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "qsStringify"
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!randomNumber:var",
          "docComment": "/**\n * 随机整数\n *\n * @param min - \n *\n * @param max - \n *\n * @returns {number}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "randomNumber: "
            },
            {
              "kind": "Content",
              "text": "(min: number, max: number) => number"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "randomNumber",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!RandomString:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface RandomString "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "RandomString",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "sculp-js!RandomString:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(length: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", pool: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "length",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "pool",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "sculp-js!RandomString:call(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(length: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "length",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "sculp-js!RandomString:call(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(pool: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "pool",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "sculp-js!RandomString:call(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 4,
              "parameters": []
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!randomString:var",
          "docComment": "/**\n * 随机字符串\n *\n * @param length - \n *\n * @param pool - \n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "randomString: "
            },
            {
              "kind": "Reference",
              "text": "RandomString",
              "canonicalReference": "sculp-js!RandomString:interface"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "randomString",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!randomUuid:function(1)",
          "docComment": "/**\n * 优先浏览器原生能力获取 UUID v4\n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function randomUuid(): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "randomUuid"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "sculp-js!ReadyCallback:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type ReadyCallback = "
            },
            {
              "kind": "Content",
              "text": "() => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "ReadyCallback",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!removeClass:function(1)",
          "docComment": "/**\n * 给元素移除样式名\n *\n * @param el - \n *\n * @param classNames - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function removeClass(el: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", classNames: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "el",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "classNames",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "removeClass"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "sculp-js!Replacer:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type Replacer = "
            },
            {
              "kind": "Content",
              "text": "(value: "
            },
            {
              "kind": "Reference",
              "text": "LooseParamValue",
              "canonicalReference": "sculp-js!LooseParamValue:type"
            },
            {
              "kind": "Content",
              "text": ") => string | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "Replacer",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!replaceVarFromString:function(1)",
          "docComment": "/**\n * 替换字符串中的插值变量\n *\n * @param sourceStr - \n *\n * @param targetObj - \n *\n * @param leftMatchSymbol - 变量左侧匹配符号，默认：{\n *\n * @param rightMatchSymbol - 变量右侧匹配符号，默认：}\n *\n * @returns string\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function replaceVarFromString(sourceStr: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", targetObj: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, any>"
            },
            {
              "kind": "Content",
              "text": ", leftMatchSymbol?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", rightMatchSymbol?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "sourceStr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "targetObj",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "leftMatchSymbol",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": true
            },
            {
              "parameterName": "rightMatchSymbol",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": true
            }
          ],
          "name": "replaceVarFromString"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!searchTreeById:function(1)",
          "docComment": "/**\n * 在树中找到 id 为某个值的节点，并返回上游的所有父级节点\n *\n * @param tree - 树形数据\n *\n * @param nodeId - 元素ID\n *\n * @param config - 迭代配置项\n *\n * @returns {[IdLike[], ITreeItem<V>[]]} - 由parentId...childId, parentObject-childObject组成的二维数组\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function searchTreeById<V>(tree: "
            },
            {
              "kind": "Reference",
              "text": "ArrayLike",
              "canonicalReference": "!ArrayLike:interface"
            },
            {
              "kind": "Content",
              "text": "<V>"
            },
            {
              "kind": "Content",
              "text": ", nodeId: "
            },
            {
              "kind": "Reference",
              "text": "IdLike",
              "canonicalReference": "sculp-js!IdLike:type"
            },
            {
              "kind": "Content",
              "text": ", config?: "
            },
            {
              "kind": "Reference",
              "text": "ITreeConf",
              "canonicalReference": "sculp-js!ITreeConf:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "["
            },
            {
              "kind": "Reference",
              "text": "IdLike",
              "canonicalReference": "sculp-js!IdLike:type"
            },
            {
              "kind": "Content",
              "text": "[], "
            },
            {
              "kind": "Reference",
              "text": "ArrayLike",
              "canonicalReference": "!ArrayLike:interface"
            },
            {
              "kind": "Content",
              "text": "<V>[]]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "tree",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "nodeId",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "searchTreeById"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!setGlobal:function(1)",
          "docComment": "/**\n * 设置全局变量\n *\n * @param key - \n *\n * @param val - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function setGlobal(key: "
            },
            {
              "kind": "Content",
              "text": "string | number | symbol"
            },
            {
              "kind": "Content",
              "text": ", val?: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "key",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "val",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "setGlobal"
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!SetStyle:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface SetStyle "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "SetStyle",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "sculp-js!SetStyle:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(el: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ", key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", val: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "el",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "val",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "sculp-js!SetStyle:call(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(el: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ", style: "
                },
                {
                  "kind": "Reference",
                  "text": "Style",
                  "canonicalReference": "sculp-js!Style:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "el",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "style",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!setStyle:var",
          "docComment": "/**\n * 设置元素样式\n *\n * @param el - \n *\n * @param key - \n *\n * @param val - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "setStyle: "
            },
            {
              "kind": "Reference",
              "text": "SetStyle",
              "canonicalReference": "sculp-js!SetStyle:interface"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "setStyle",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!smoothScroll:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function smoothScroll(options?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SmoothScrollOptions",
              "canonicalReference": "sculp-js!SmoothScrollOptions:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": true
            }
          ],
          "name": "smoothScroll"
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!SmoothScrollOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface SmoothScrollOptions "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "SmoothScrollOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!SmoothScrollOptions#duration:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "duration: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "duration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!SmoothScrollOptions#easing:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "easing: "
                },
                {
                  "kind": "Reference",
                  "text": "EasingName",
                  "canonicalReference": "sculp-js!~EasingName:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "easing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!SmoothScrollOptions#el:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "el: "
                },
                {
                  "kind": "Reference",
                  "text": "ScrollElement",
                  "canonicalReference": "sculp-js!~ScrollElement:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "el",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!SmoothScrollOptions#to:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "to: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "to",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!STRING_ARABIC_NUMERALS:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "STRING_ARABIC_NUMERALS = "
            },
            {
              "kind": "Content",
              "text": "\"0123456789\""
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "STRING_ARABIC_NUMERALS",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!STRING_LOWERCASE_ALPHA:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "STRING_LOWERCASE_ALPHA = "
            },
            {
              "kind": "Content",
              "text": "\"abcdefghijklmnopqrstuvwxyz\""
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "STRING_LOWERCASE_ALPHA",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!STRING_POOL:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "STRING_POOL: "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "STRING_POOL",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!STRING_UPPERCASE_ALPHA:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "STRING_UPPERCASE_ALPHA = "
            },
            {
              "kind": "Content",
              "text": "\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\""
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "STRING_UPPERCASE_ALPHA",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!stringAssign:var",
          "docComment": "/**\n * 字符串赋值\n *\n * @param template - \n *\n * @param data - \n *\n * @returns {string}\n *\n * @example\n * ```js\n * stringAssign('My name is ${user}.', { user: 'zhangsan' });\n * // => \"My name is zhangsan.\"\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "stringAssign: "
            },
            {
              "kind": "Content",
              "text": "(template: string, data: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "sculp-js!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": ") => string"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "stringAssign",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!stringCamelCase:function(1)",
          "docComment": "/**\n * 将字符串转换为驼峰格式\n *\n * @param string - \n *\n * @param bigger - 是否大写第一个字母\n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function stringCamelCase(string: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", bigger?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "string",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "bigger",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "stringCamelCase"
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!stringEscapeHtml:var",
          "docComment": "/**\n * 字符串编码 HTML\n *\n * @param html - \n *\n * @returns {string}\n *\n * @example\n * ```js\n * stringEscapeHtml('<b>You & Me speak \"xixi\"</b>')\n * // => \"&lt;b&gt;You &amp; Me speak &quot;xixi&quot;&lt;/b&gt;\"\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "stringEscapeHtml: "
            },
            {
              "kind": "Content",
              "text": "(html: string) => string"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "stringEscapeHtml",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!stringFill:var",
          "docComment": "/**\n * 字符串填充\n *\n * @param length - \n *\n * @param value - \n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "stringFill: "
            },
            {
              "kind": "Content",
              "text": "(length: number, value?: string) => string"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "stringFill",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!stringFormat:function(1)",
          "docComment": "/**\n * 字符串格式化\n *\n * @param string - 字符串模板，使用 %s 表示字符串，%d 表示数值，%o 表示对象，%% 表示百分号，参考 console.log\n *\n * @param args - \n *\n * @returns {string}\n *\n * @example\n * ```js\n * stringFormat(\"My name is %s.\", \"zhangsan\")\n * // => \"My name is zhangsan.\"\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function stringFormat(string: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", ...args: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<unknown>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "string",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "args",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "name": "stringFormat"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!stringKebabCase:function(1)",
          "docComment": "/**\n * 将字符串转换为连字格式\n *\n * @param string - \n *\n * @param separator - 分隔符，默认是\"-\"（短横线）\n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function stringKebabCase(string: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", separator?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "string",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "separator",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "stringKebabCase"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!strip:function(1)",
          "docComment": "/**\n * Correct the given number to specifying significant digits.\n *\n * @param num - The input number\n *\n * @param precision - An integer specifying the number of significant digits\n *\n * @example\n *\n * strip(0.09999999999999998) === 0.1 // true\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function strip(num: "
            },
            {
              "kind": "Reference",
              "text": "NumberType",
              "canonicalReference": "sculp-js!~NumberType:type"
            },
            {
              "kind": "Content",
              "text": ", precision?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "num",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "precision",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "strip"
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!Style:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface Style "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "Style",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "sculp-js!Style:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[propName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "string | number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "propName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!subtract:var",
          "docComment": "/**\n * 数值安全减法\n *\n * @param arg1 - 数值1\n *\n * @param arg2 - 数值2\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "subtract: "
            },
            {
              "kind": "Content",
              "text": "(arg1: number, arg2: number) => number"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "subtract",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!supportCanvas:function(1)",
          "docComment": "/**\n * 判断是否支持canvas\n *\n * @returns {boolean}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function supportCanvas(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "supportCanvas"
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!throttle:var",
          "docComment": "/**\n * 节流函数 节流就是节约流量，将连续触发的事件稀释成预设评率。 比如每间隔1秒执行一次函数，无论这期间触发多少次事件。 这有点像公交车，无论在站点等车的人多不多，公交车只会按时来一班，不会来一个人就来一辆公交车。\n *\n * @param func - \n *\n * @param wait - \n *\n * @param immediate - \n *\n * @returns {ThrottleFunc<F>}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "throttle: "
            },
            {
              "kind": "Content",
              "text": "<F extends "
            },
            {
              "kind": "Reference",
              "text": "AnyFunc",
              "canonicalReference": "sculp-js!AnyFunc:type"
            },
            {
              "kind": "Content",
              "text": ">(func: F, wait: number, immediate?: boolean) => "
            },
            {
              "kind": "Reference",
              "text": "ThrottleFunc",
              "canonicalReference": "sculp-js!ThrottleFunc:interface"
            },
            {
              "kind": "Content",
              "text": "<F>"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "throttle",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!ThrottleFunc:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface ThrottleFunc<F extends "
            },
            {
              "kind": "Reference",
              "text": "AnyFunc",
              "canonicalReference": "sculp-js!AnyFunc:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ThrottleFunc",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "sculp-js!ThrottleFunc:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(...args: "
                },
                {
                  "kind": "Reference",
                  "text": "Parameters",
                  "canonicalReference": "!Parameters:type"
                },
                {
                  "kind": "Content",
                  "text": "<F>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!ThrottleFunc#cancel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cancel: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cancel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!tooltipEvent:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "tooltipEvent: "
            },
            {
              "kind": "Content",
              "text": "{\n    handleMouseEnter: typeof "
            },
            {
              "kind": "Reference",
              "text": "handleMouseEnter",
              "canonicalReference": "sculp-js!~handleMouseEnter:function"
            },
            {
              "kind": "Content",
              "text": ";\n    handleMouseLeave: typeof "
            },
            {
              "kind": "Reference",
              "text": "handleMouseLeave",
              "canonicalReference": "sculp-js!~handleMouseLeave:function"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "tooltipEvent",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!typeIs:var",
          "docComment": "/**\n * 判断任意值的数据类型\n *\n * @param any - \n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "typeIs: "
            },
            {
              "kind": "Content",
              "text": "(any: unknown) => string"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "typeIs",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!UNIQUE_NUMBER_SAFE_LENGTH:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "UNIQUE_NUMBER_SAFE_LENGTH = "
            },
            {
              "kind": "Content",
              "text": "18"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "UNIQUE_NUMBER_SAFE_LENGTH",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!uniqueNumber:var",
          "docComment": "/**\n * 生成唯一不重复数值\n *\n * @param length - \n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "uniqueNumber: "
            },
            {
              "kind": "Content",
              "text": "(length?: number) => string"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "uniqueNumber",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!UniqueString:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface UniqueString "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "UniqueString",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "CallSignature",
              "canonicalReference": "sculp-js!UniqueString:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(length: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", pool: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "length",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "pool",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "sculp-js!UniqueString:call(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(length: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "length",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "sculp-js!UniqueString:call(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(pool: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "pool",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "sculp-js!UniqueString:call(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 4,
              "parameters": []
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!uniqueString:var",
          "docComment": "/**\n * 生成唯一不重复字符串\n *\n * @param length - \n *\n * @param pool - \n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "uniqueString: "
            },
            {
              "kind": "Reference",
              "text": "UniqueString",
              "canonicalReference": "sculp-js!UniqueString:interface"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "uniqueString",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!uniqueSymbol:function(1)",
          "docComment": "/**\n * 去除字符串中重复字符\n *\n * @param str - \n *\n * @returns string\n *\n * @example\n *\n * uniqueSymbol('1a1bac'); // => '1abc'\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function uniqueSymbol(str: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "str",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "uniqueSymbol"
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!URL_REGEX:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "URL_REGEX: "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "URL_REGEX",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "sculp-js!Url:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface Url "
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "Url",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!Url#auth:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "auth: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "auth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!Url#hash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hash: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!Url#host:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "host: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "host",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!Url#hostname:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hostname: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hostname",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!Url#href:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "href: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "href",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!Url#password:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "password: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "password",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!Url#path:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!Url#pathname:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pathname: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pathname",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!Url#port:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "port: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "port",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!Url#protocol:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protocol: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "protocol",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!Url#query:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "query: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "query",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!Url#search:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "search: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "search",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!Url#searchParams:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "searchParams: "
                },
                {
                  "kind": "Reference",
                  "text": "Params",
                  "canonicalReference": "sculp-js!Params:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "searchParams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "sculp-js!Url#username:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "username: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "username",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!urlDelParams:var",
          "docComment": "/**\n * 删除 url 查询参数\n *\n * @param url - \n *\n * @param removeKeys - \n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "urlDelParams: "
            },
            {
              "kind": "Content",
              "text": "(url: string, removeKeys: string[]) => string"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "urlDelParams",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!urlParse:var",
          "docComment": "/**\n * url 解析\n *\n * @param url - \n *\n * @returns {Url}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "urlParse: "
            },
            {
              "kind": "Content",
              "text": "(url: string) => "
            },
            {
              "kind": "Reference",
              "text": "Url",
              "canonicalReference": "sculp-js!Url:interface"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "urlParse",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!urlSetParams:var",
          "docComment": "/**\n * 设置 url 查询参数\n *\n * @param url - \n *\n * @param setter - \n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "urlSetParams: "
            },
            {
              "kind": "Content",
              "text": "(url: string, setter: "
            },
            {
              "kind": "Reference",
              "text": "AnyObject",
              "canonicalReference": "sculp-js!AnyObject:type"
            },
            {
              "kind": "Content",
              "text": ") => string"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "urlSetParams",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "sculp-js!urlStringify:var",
          "docComment": "/**\n * url 字符化，url 对象里的 searchParams 会覆盖 url 原有的查询参数\n *\n * @param url - \n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "urlStringify: "
            },
            {
              "kind": "Content",
              "text": "(url: "
            },
            {
              "kind": "Reference",
              "text": "Url",
              "canonicalReference": "sculp-js!Url:interface"
            },
            {
              "kind": "Content",
              "text": ") => string"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "urlStringify",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!wait:function(1)",
          "docComment": "/**\n * 等待一段时间\n *\n * @param timeout - 等待时间，单位毫秒\n *\n * @returns {Promise<void>}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function wait(timeout?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "timeout",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "wait"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!weAtob:function(1)",
          "docComment": "/**\n * Base64解码为原始字符串（适用于任何环境，包括小程序）\n *\n * @param string - \n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function weAtob(string: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "string",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "weAtob"
        },
        {
          "kind": "Function",
          "canonicalReference": "sculp-js!weBtoa:function(1)",
          "docComment": "/**\n * 字符串编码成Base64 （适用于任何环境，包括小程序）\n *\n * @param string - \n *\n * @returns {string}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare function weBtoa(string: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "string",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "weBtoa"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "sculp-js!WithChildren:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type WithChildren<T> = "
            },
            {
              "kind": "Content",
              "text": "T & {\n    children?: "
            },
            {
              "kind": "Reference",
              "text": "WithChildren",
              "canonicalReference": "sculp-js!WithChildren:type"
            },
            {
              "kind": "Content",
              "text": "<T>[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/index.d.ts",
          "releaseTag": "Public",
          "name": "WithChildren",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        }
      ]
    }
  ]
}
